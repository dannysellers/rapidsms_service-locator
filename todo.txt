SMS to number:
—"[Service] near [location]"
—Return result
—Adjective/qualifier on service
—Changes made after 5 people suggest correction
—Class of users
—low cost per query
—0 charge for correction suggestion
—include / for ad hoc resources e.g. post-crisis
—determine where people are by using secondary queries / choosing to see other options?
—determine categorical need in specific areas by query category

Backend / frontend (web interface):
Define camp / area with mapbox / leaflet.js
Util to convert between global and relative coordinates
Define location of nodes / beacons

GeoDjango

should MapArea be divided up into a grid?
do relative coordinates make sense? relative distance wouldn't rely on it

Register people, including people as doctors etc and admins
Aggregating data: report surges in queries based on location and subject

Alerts:
Scheduled or realtime
django-cron for schedule. Run 4 times per day--check whether any listed alert has
exceeded the trigger threshold, take action if so. For realtime models, hook into the
save() method of supported model classes, or into post_save signal.

Actions can include sending email, texting registered contact (of Admin/Admin-type class),
or other? (Other could be tricky and is vague).

Alert 'center':
Display alert notification in navbar if any triggered alerts since the last time the
user logged in (should be tracked already). User has the option to mark all as read.